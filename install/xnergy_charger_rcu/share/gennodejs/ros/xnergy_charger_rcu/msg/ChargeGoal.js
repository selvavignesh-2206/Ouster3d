// Auto-generated. Do not edit!

// (in-package xnergy_charger_rcu.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class ChargeGoal {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.enable_charge = null;
    }
    else {
      if (initObj.hasOwnProperty('enable_charge')) {
        this.enable_charge = initObj.enable_charge
      }
      else {
        this.enable_charge = false;
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type ChargeGoal
    // Serialize message field [enable_charge]
    bufferOffset = _serializer.bool(obj.enable_charge, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type ChargeGoal
    let len;
    let data = new ChargeGoal(null);
    // Deserialize message field [enable_charge]
    data.enable_charge = _deserializer.bool(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    return 1;
  }

  static datatype() {
    // Returns string type for a message object
    return 'xnergy_charger_rcu/ChargeGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return 'f613c78a671dd6ea2f038c0a4c2f0c24';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    ## Goal Definition
    bool enable_charge
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new ChargeGoal(null);
    if (msg.enable_charge !== undefined) {
      resolved.enable_charge = msg.enable_charge;
    }
    else {
      resolved.enable_charge = false
    }

    return resolved;
    }
};

module.exports = ChargeGoal;
