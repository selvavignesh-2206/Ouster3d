; Auto-generated. Do not edit!


(cl:in-package xnergy_charger_rcu-msg)


;//! \htmlinclude ChargeFeedback.msg.html

(cl:defclass <ChargeFeedback> (roslisp-msg-protocol:ros-message)
  ((status
    :reader status
    :initarg :status
    :type xnergy_charger_rcu-msg:ChargerState
    :initform (cl:make-instance 'xnergy_charger_rcu-msg:ChargerState)))
)

(cl:defclass ChargeFeedback (<ChargeFeedback>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <ChargeFeedback>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'ChargeFeedback)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name xnergy_charger_rcu-msg:<ChargeFeedback> is deprecated: use xnergy_charger_rcu-msg:ChargeFeedback instead.")))

(cl:ensure-generic-function 'status-val :lambda-list '(m))
(cl:defmethod status-val ((m <ChargeFeedback>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader xnergy_charger_rcu-msg:status-val is deprecated.  Use xnergy_charger_rcu-msg:status instead.")
  (status m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <ChargeFeedback>) ostream)
  "Serializes a message object of type '<ChargeFeedback>"
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'status) ostream)
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <ChargeFeedback>) istream)
  "Deserializes a message object of type '<ChargeFeedback>"
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'status) istream)
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<ChargeFeedback>)))
  "Returns string type for a message object of type '<ChargeFeedback>"
  "xnergy_charger_rcu/ChargeFeedback")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'ChargeFeedback)))
  "Returns string type for a message object of type 'ChargeFeedback"
  "xnergy_charger_rcu/ChargeFeedback")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<ChargeFeedback>)))
  "Returns md5sum for a message object of type '<ChargeFeedback>"
  "109992c8e1dfc8ecd7be76c615ba4d7f")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'ChargeFeedback)))
  "Returns md5sum for a message object of type 'ChargeFeedback"
  "109992c8e1dfc8ecd7be76c615ba4d7f")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<ChargeFeedback>)))
  "Returns full string definition for message of type '<ChargeFeedback>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%## Feedback Definition~%ChargerState status~%~%================================================================================~%MSG: xnergy_charger_rcu/ChargerState~%int16 RCU_NOT_CONNECTED = 250~%~%int16 RCU_IDLE = 0~%~%int16 RCU_RESERVE_0 = 1~%~%int16 RCU_HANDSHAKE_0 = 2~%int16 RCU_HANDSHAKE_1 = 3~%int16 RCU_HANDSHAKE_2 = 4~%~%int16 RCU_CHARGING = 5~%int16 RCU_STOP = 6~%~%int16 RCU_RESERVE_1 = 7~%int16 RCU_RESERVE_2 = 240~%int16 RCU_ERROR = 238~%~%Header header~%int16 state~%string message~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'ChargeFeedback)))
  "Returns full string definition for message of type 'ChargeFeedback"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%## Feedback Definition~%ChargerState status~%~%================================================================================~%MSG: xnergy_charger_rcu/ChargerState~%int16 RCU_NOT_CONNECTED = 250~%~%int16 RCU_IDLE = 0~%~%int16 RCU_RESERVE_0 = 1~%~%int16 RCU_HANDSHAKE_0 = 2~%int16 RCU_HANDSHAKE_1 = 3~%int16 RCU_HANDSHAKE_2 = 4~%~%int16 RCU_CHARGING = 5~%int16 RCU_STOP = 6~%~%int16 RCU_RESERVE_1 = 7~%int16 RCU_RESERVE_2 = 240~%int16 RCU_ERROR = 238~%~%Header header~%int16 state~%string message~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <ChargeFeedback>))
  (cl:+ 0
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'status))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <ChargeFeedback>))
  "Converts a ROS message object to a list"
  (cl:list 'ChargeFeedback
    (cl:cons ':status (status msg))
))
