// Generated by gencpp from file trolley_arm/arm.msg
// DO NOT EDIT!


#ifndef TROLLEY_ARM_MESSAGE_ARM_H
#define TROLLEY_ARM_MESSAGE_ARM_H

#include <ros/service_traits.h>


#include <trolley_arm/armRequest.h>
#include <trolley_arm/armResponse.h>


namespace trolley_arm
{

struct arm
{

typedef armRequest Request;
typedef armResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct arm
} // namespace trolley_arm


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::trolley_arm::arm > {
  static const char* value()
  {
    return "2079c40741b265a6e5146449061d08a0";
  }

  static const char* value(const ::trolley_arm::arm&) { return value(); }
};

template<>
struct DataType< ::trolley_arm::arm > {
  static const char* value()
  {
    return "trolley_arm/arm";
  }

  static const char* value(const ::trolley_arm::arm&) { return value(); }
};


// service_traits::MD5Sum< ::trolley_arm::armRequest> should match
// service_traits::MD5Sum< ::trolley_arm::arm >
template<>
struct MD5Sum< ::trolley_arm::armRequest>
{
  static const char* value()
  {
    return MD5Sum< ::trolley_arm::arm >::value();
  }
  static const char* value(const ::trolley_arm::armRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::trolley_arm::armRequest> should match
// service_traits::DataType< ::trolley_arm::arm >
template<>
struct DataType< ::trolley_arm::armRequest>
{
  static const char* value()
  {
    return DataType< ::trolley_arm::arm >::value();
  }
  static const char* value(const ::trolley_arm::armRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::trolley_arm::armResponse> should match
// service_traits::MD5Sum< ::trolley_arm::arm >
template<>
struct MD5Sum< ::trolley_arm::armResponse>
{
  static const char* value()
  {
    return MD5Sum< ::trolley_arm::arm >::value();
  }
  static const char* value(const ::trolley_arm::armResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::trolley_arm::armResponse> should match
// service_traits::DataType< ::trolley_arm::arm >
template<>
struct DataType< ::trolley_arm::armResponse>
{
  static const char* value()
  {
    return DataType< ::trolley_arm::arm >::value();
  }
  static const char* value(const ::trolley_arm::armResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TROLLEY_ARM_MESSAGE_ARM_H
